import lxml.etree as ET
import os
import shutil
import requests
import time
import getpass
import errno
import PySimpleGUI as SG

my_icon64 = b'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'

my_globe = b''

def login(url, payload):
	#this will log into the preservica API and get an access token
	auth = requests.post(url, data=payload).json()
	window['-OUTPUT-'].update(f"{auth}\n", append=True)
	sessionToken = auth["token"]
	headers = {'Preservica-Access-Token': sessionToken}
	headers['Content-Type'] = 'application/xml'
	headers['Accept-Charset'] = 'UTF-8'
	return headers

def dirMaker(filename):
	if not os.path.exists(os.path.dirname(filename)):
		try:
			os.makedirs(os.path.dirname(filename), exist_ok=True)
		except OSError as exc:
			if exc.errno != errno.EExist:
				raise

def get_namespaces(filename):
    dom = ET.parse(filename)
    root = dom.getroot()
    namespaces = root.nsmap
    namespaces['xmlns'] = namespaces[None]
    namespaces.pop(None, None)
    namespaces['dcterms'] = "http://dublincore.org/documents/dcmi-terms/"
    namespaces['tslac'] = "https://www.tsl.texas.gov/"
    namespaces['MetadataResponse'] = namespaces['xmlns']
    namespaces['EntityResponse'] = namespaces['xmlns']
    namespaces['ChildrenResponse'] = namespaces['xmlns']
    nameOfSpace = namespaces['xmlns'].split("/")[-1]
    namespaces['xip'] = f"http://preservica.com/XIP/{nameOfSpace}"
    return namespaces

def get_entityURL(filename, nsmap):
    dom = ET.parse(filename)
    root = dom.getroot()
    entityURL = dom.find(".//MetadataResponse:Self", namespaces=nsmap).text
    return entityURL

def get_filedata(filename, nsmap):
    dom = ET.parse(filename)
    root = dom.getroot()
    entityURL = dom.find(".//MetadataResponse:Self", namespaces=nsmap).text
    xipRef = dom.find(".//xip:Ref", namespaces=nsmap).text
    xipEntity = dom.find(".//xip:Entity", namespaces=nsmap).text
    with open(filename, "r") as r:
        filedata = r.read()
        filedata = filedata.replace('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>', '')
        filedata = filedata.replace("<?xml version='1.0' encoding='utf-8'?>", "")
        filedata = filedata.replace(
                        f'<MetadataResponse xmlns="{nsmap["MetadataResponse"]}" xmlns:xip="{nsmap["xip"]}"><xip:MetadataContainer schemaUri="http://dublincore.org/documents/dcmi-terms/"><xip:Ref>{xipRef}</xip:Ref><xip:Entity>{xipEntity}</xip:Entity><xip:Content>', '')
        filedata = filedata.replace( f'</xip:Content></xip:MetadataContainer><AdditionalInformation><Self>{entityURL}</Self></AdditionalInformation></MetadataResponse>', '')
        filedata = filedata.replace("–", "-")
        filedata = filedata.replace("’", "'")
        filedata = filedata.replace('“', '"')
        filedata = filedata.replace('”', '"')
        return filedata

def get_count(filepath):
	my_count = 0
	for dirpath, dirnames, filenames in os.walk(filepath):
		for filename in filenames:
			if "metadata" in filename:
				my_count += 1
	return my_count

def check_login(valuables=dict):
	window['-Status_image-'].update_animation(my_globe)
	prefix = valuables['prefix']
	username = valuables['username']
	password = valuables['password']
	tenancy = valuables['tenancy']
	url = f"https://{prefix}.preservica.com/api/accesstoken/login"
	payload = {"username": username,
			   "password": password,
			   "tenant": tenancy}
	headers = login(url, payload)
	window['-OUTPUT-'].update(f"\n{headers}", append=True)
def upload_updates(valuables=dict):
	prefix = valuables['prefix']
	username = valuables['username']
	password = valuables['password']
	tenancy = valuables['tenancy']
	filepath = valuables['filepath']
	total_files = valuables['total_files']
	url = f"https://{prefix}.preservica.com/api/accesstoken/login"
	payload = {"username": username,
			   "password": password,
			   "tenant": tenancy}
	headers = login(url, payload)
	timer = time.time() + 600
	root_folder = len(filepath.split('/')[-1].split('\\')[-1])
	root_folder = filepath[:-root_folder]
	current_count = 0
	for dirpath, dirnames, filenames in os.walk(filepath):
		for filename in filenames:
			if "metadata" in filename:
				window['-Status_image-'].update_animation(my_globe, time_between_frames=100)
				filename1 = filename
				filename = os.path.join(dirpath, filename)
				window['-OUTPUT-'].update(f"processing {filename1}\n", append=True)
				nsmap = get_namespaces(filename)
				entity_url = get_entityURL(filename, nsmap)
				filedata = get_filedata(filename, nsmap)
				response = requests.put(entity_url, headers=headers, data=filedata.encode('utf-8'))
				status = response.status_code
				current = time.asctime()
				success = os.path.join(root_folder, "done", filename1)
				failure = os.path.join(root_folder, "errors", filename1)
				window['-OUTPUT-'].update(f"{status} at {current} for {filename1}\n", append=True)
				if status == 200:
					dirMaker(success)
					os.rename(filename, success)
				if status != 200:
					dirMaker(failure)
					os.rename(filename, failure)
				current_count += 1
				window['-Progress-'].update_bar(current_count, total_files)
				window['-Progress_text-'].update(f"Completed {current_count}/{total_files}")
			if timer <= time.time():
				window['-OUTPUT-'].update("time to log back in\n", append=True)
				headers = login(url, headers)
				window['-OUTPUT-'].update(f"{headers}\n", append=True)
				timer = time.time() + 600
	window['-OUTPUT-'].update(f"all done", append=True)

SG.theme("DarkGreen5")
layout_left = [
	[
		SG.Text("For each code that is not 200 the file will be copied to an errors directory", visible=True),
		SG.Push()
	],
	[
		SG.Text("Once uploads are complete, re-attempt any files in ./errors and if all ok delete ./errors", visible=True),
		SG.Push()
	],
	[
		SG.Push(),
		SG.Text("Enter Username:", visible=True, key="-Username_label-"),
		SG.In("", size=(50, 1), visible=True, key="-Username-")
	],
	[
		SG.Push(),
		SG.Text("Enter Password:", visible=True, key="-Password_label-"),
		SG.In("", size=(50, 1), visible=True, key='-Password-', password_char="#")
	],
	[
		SG.Push(),
		SG.Text("Enter url prefix:", visible=True, key='-Prefix_label-'),
		SG.In("", size=(50, 1), visible=True, key='-Prefix-')
	],
	[
		SG.Push(),
		SG.Text("Enter tenancy abbreviation:", visible=True, key="-Tenancy_label-"),
		SG.In("", size=(50, 1), visible=True, key='-Tenancy-')
	],
	[
		SG.Push(),
		SG.Text("Enter filepath to files for upload:", visible=True, key='-Filepath_label-'),
		SG.In("", visible=True, key='-Filepath-'),
		SG.FolderBrowse()
	],
	[
		SG.Text("Select check login to verify login credentials, select process queue to start update process", visible=True, key='-Instructions-'),
		SG.Push()
	]
]
layout_right = [
	[
		SG.Push(),
		SG.Image(data=my_icon64, enable_events=True, key='-Status_image-'),
		SG.Push()
	],
	[
		SG.Push(),
		SG.Button("Check login", size=(15, 1), key="-login_check-"),
		SG.Push()
	],
	[
		SG.Push(),
		SG.Button("Process queue", size=(15, 1), key="-process_queue-", bind_return_key=True),
		SG.Push()
	],
	[
		SG.Push(),
		SG.Button("Close", size=(15, 1)),
		SG.Push()
	]
]
layout = [
	[
		SG.Pane([SG.Column(layout_left),SG.Column(layout_right, size=(50,100))], orientation='h', expand_x=True, expand_y=True)
	],
	[
		SG.Text("Will update with completed tasks values as progress occurs", key='-Progress_text-'),
		SG.Push()
	],
	[
		SG.Push(),
		SG.ProgressBar(max_value=1, orientation="h", size=(60, 20), bar_color="dark green", border_width=5, key="-Progress-", relief="RELIEF_SUNKEN"),
		SG.Push()
	],
	[
		SG.Push(),
		SG.Multiline(default_text="Click check login to verify credentials and process queue to start things up\n--------------------------------------", size=(90, 10),
					 auto_refresh=True, reroute_stdout=False, key='-OUTPUT-', autoscroll=True, border_width=5),
		SG.Push()
	]
]

window = SG.Window(
	title="Upload updates GUI",
	icon=my_icon64,
	button_color="dark green",
	layout=layout)

event, values = window.read()
while True:
	event, values = window.read(timeout=10)
	valuables = dict()
	valuables['prefix'] = values['-Prefix-']
	valuables['username'] = values['-Username-']
	valuables['password'] = values['-Password-']
	valuables['tenancy'] = values['-Tenancy-']
	valuables['filepath'] = values['-Filepath-']
	if event == "-login_check-" or event == "Check login":
		#window['-Status_image-'].update_animation(my_globe, time_between_frames=100)
		check_login(valuables)
		window['-Status_image-'].update(data=my_icon64)
	if event == "-process_queue-" or event == "Process queue":
		window['-OUTPUT-'].update(f"Grabbing filecount for progress bar\n", append=True)
		valuables['total_files'] = get_count(valuables['filepath'])
		window['-OUTPUT-'].update(f"Starting processing of metadata files\n", append=True)
		upload_updates(valuables)
		window['-Status_image-'].update(data=my_icon64)
	if event == "Close" or event == SG.WINDOW_CLOSED:
		break
window.close()